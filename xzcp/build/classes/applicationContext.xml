<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
       
	<context:property-placeholder location="classpath:db.properties"/>
	<context:annotation-config/>
	
	<!-- 数据源，使用c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<!-- 注入属性值 -->
       	<property name="driverClass" value="${jdbc.driverClass}"></property>
       	<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
       	<property name="user" value="${jdbc.user}"></property>
       	<property name="password" value="${jdbc.password}"></property>
     </bean>
	
	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="classpath:SqlMapConfig.xml"/>
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册
	遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录中
	自动扫描出来的mapper的bean的id为mapper类名（首字母小写）
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描的包名
		如果扫描多个包，每个包中间使用半角逗号分隔
		 -->
		<property name="basePackage" value="cn.xzcp.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 配置声明式事务(spring中的事务) -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	   <property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置基于注解的声明式事务 @Transactional-->
    <tx:annotation-driven transaction-manager="txManager" />
	
	<!-- 配置注解扫描 -->
	<context:component-scan base-package="cn.xzcp.service"></context:component-scan>
    
    <!-- 引入其他spring配置文件 -->
	<!-- <import resource="classpath:bean.xml"/> -->
	
	<!--配置触发器任务-->  
	<!-- 配置需要定时的bean类 -->  
	 <bean id="scoreTrigger" class="cn.xzcp.utils.ScoreTrigger"></bean>  
	   
	  <!-- 配置任务的具体类和方法 -->  
	 <bean id="startWorkTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	  <!-- 要调用的bean -->  
	  <property name="targetObject" ref="scoreTrigger"></property>   
	  <!-- 要调用的Method -->  
	  <property name="targetMethod" value="perform"></property>  
	  <!-- 是否并发,false表示 如果发生错误也不影响下一次的调用 -->  
	  <property name="concurrent" value="false"></property>  
	 </bean>  
	   
	 <!-- 配置一个触发器，每月一号的00：01触发 -->  
	 <bean id="startWorkTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	  <property name="jobDetail" ref="startWorkTask"></property>  
	  <!--时间表达式，0 分 时 日，0 1 0 1代表每月的1日0时1分-->
	  <property name="cronExpression" value="0 0 0 1 * ?"></property> <!--时间表达式-->  
	 </bean>  
	    
	 <!-- 总调度,用于启动定时器 -->  
	 <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	  <property name="triggers" >  
	   <list>  
	    <ref bean="startWorkTrigger"/>  
	   </list>  
	  </property>  
	 </bean>  
	 
	 <bean id="userService" class="cn.xzcp.service.impl.UserServiceImpl"></bean>
	 
	 <bean id="scoreService" class="cn.xzcp.service.impl.ScoreServiceImpl"></bean>
	 
	 <bean id="termscoreService" class="cn.xzcp.service.impl.TermscoreServiceImpl"></bean>
	<!--配置触发器任务结束--> 
	
</beans>